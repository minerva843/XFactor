/**************************************************************************************
 * @name:       svgavatars.core.min.js - jQuery plugin for creating vector avatars
 * @version:    1.5
 * @URL:        https://svgavatars.com
 * @copyright:  (c) 2014-2019 DeeThemes (https://codecanyon.net/user/DeeThemes)
 * @licenses:   https://codecanyon.net/licenses/regular
 *              https://codecanyon.net/licenses/extended
 ***************************************************************************************/
window.jQuery(document).ready(function (a) {
    function L(A, e) {
        function h() {
            function g(g) {
                for (var a = ["updown", "leftright", "rotate"], d = 0; d < a.length; d++) g.data(a[d], 0, !0);
                g.attr("transform", "matrix(1,0,0,1,0,0)");
            }
            function a(g) {
                for (var a = ["scaleX", "scaleY"], d = 0; d < a.length; d++) g.data(a[d], 1, !0);
                g.attr("transform", "matrix(1,0,0,1,0,0)");
            }
            var e = b("svga-svgmain").attr({ id: "svga-svgcanvas", width: null, height: null, class: "svga-svg", viewBox: "0 0 200 200", preserveAspectRatio: "xMinYMin meet" });
            e = e.group().attr("id", "svga-group-wrapper");
            e.group().attr("id", "svga-group-backs-single");
            e = e.group().attr("id", "svga-group-humanwrap-move");
            g(e);
            e = e.group().attr("id", "svga-group-humanwrap");
            a(e);
            var d = e.group().attr("id", "svga-group-hair-back-move");
            g(d);
            d = d.group().attr("id", "svga-group-hair-back");
            a(d);
            e.group().attr("id", "svga-group-humanbody-single");
            e.group().attr("id", "svga-group-chinshadow-single");
            e.group().attr("id", "svga-group-clothes-single");
            var f = e.group().attr("id", "svga-group-head");
            g(f);
            d = e.group().attr("id", "svga-group-ears-left-move");
            g(d);
            f.add(d);
            d = d.group().attr("id", "svga-group-ears-left");
            a(d);
            d = e.group().attr("id", "svga-group-ears-right-move");
            g(d);
            f.add(d);
            d = d.group().attr("id", "svga-group-ears-right");
            a(d);
            d = e.group().attr("id", "svga-group-faceshape-wrap");
            a(d);
            f.add(d);
            d.group().attr("id", "svga-group-faceshape-single");
            d = e.group().attr("id", "svga-group-mouth-single-move");
            g(d);
            f.add(d);
            d = d.group().attr("id", "svga-group-mouth-single");
            a(d);
            d = e.group().attr("id", "svga-group-eyes-left-move");
            g(d);
            f.add(d);
            d = d.group().attr("id", "svga-group-eyes-left");
            a(d);
            d.group().attr("id", "svga-group-eyesback-left");
            var h = d.group().attr("id", "svga-group-eyesiriswrapper-left");
            h = h.group().attr("id", "svga-group-eyesiriscontrol-left");
            g(h);
            h = h.group().attr("id", "svga-group-eyesiris-left");
            a(h);
            d.group().attr("id", "svga-group-eyesfront-left");
            d = e.group().attr("id", "svga-group-eyes-right-move");
            g(d);
            f.add(d);
            d = d.group().attr("id", "svga-group-eyes-right");
            a(d);
            d.group().attr("id", "svga-group-eyesback-right");
            h = d.group().attr("id", "svga-group-eyesiriswrapper-right");
            h = h.group().attr("id", "svga-group-eyesiriscontrol-right");
            g(h);
            h = h.group().attr("id", "svga-group-eyesiris-right");
            a(h);
            d.group().attr("id", "svga-group-eyesfront-right");
            f.group().attr("id", "svga-group-facehighlight-single");
            d = f.group().attr("id", "svga-group-eyebrows-left-move");
            g(d);
            d = d.group().attr("id", "svga-group-eyebrows-left-rotate");
            g(d);
            d = d.group().attr("id", "svga-group-eyebrows-left");
            a(d);
            d = f.group().attr("id", "svga-group-eyebrows-right-move");
            g(d);
            d = d.group().attr("id", "svga-group-eyebrows-right-rotate");
            g(d);
            d = d.group().attr("id", "svga-group-eyebrows-right");
            a(d);
            d = f.group().attr("id", "svga-group-nose-single-move");
            g(d);
            d = d.group().attr("id", "svga-group-nose-single");
            a(d);
            "boys" === A &&
                ((d = f.group().attr("id", "svga-group-beardwrap")),
                a(d),
                (d = d.group().attr("id", "svga-group-beard-single-move")),
                g(d),
                (d = d.group().attr("id", "svga-group-beard-single")),
                a(d),
                (d = f.group().attr("id", "svga-group-mustache-single-move")),
                g(d),
                (d = d.group().attr("id", "svga-group-mustache-single")),
                a(d));
            d = f.group().attr("id", "svga-group-hair-front");
            a(d);
            d = f.group().attr("id", "svga-group-glasses-single-move");
            g(d);
            d = d.group().attr("id", "svga-group-glasses-single");
            a(d);
            c.shareCredit &&
                ((e = b.get("svga-group-wrapper")),
                (q = e.rect(200, 15).move(0, 185).fill("#ecf0f1").opacity(0.5)),
                (r = e.text(c.shareCredit).font({ "font-family": "Roboto, Helvetica, Arial, sans-serif", size: "10px", anchor: "start", weight: 400 }).fill("#333").center(100, 192)),
                q.hide(),
                r.hide());
        }
        function X(g, a, c, d) {
            var P = e[a].shapes[c][d],
                f,
                A = function (g) {
                    for (var d = 0; d < k.gradientStops.length; d++) {
                        var b = k.gradientStops[d].color;
                        m = !0;
                        var e = J(b, k.fromskin ? "faceshape" : a, m);
                        var c = g.at(k.gradientStops[d]);
                        c.update({ color: e });
                        c.data("stoptype", b);
                    }
                };
            for (f = 0; f < P.length; f++) {
                var k = P[f];
                var v = g.path(k.path, !0);
                v.data("colored", k.colored, !0);
                v.data("transparence", k.transparence, !0);
                v.data("fillType", k.fill);
                v.data("strokeType", k.stroke);
                k.fromskin && v.data("fromskin", k.fromskin, !0);
                if (!0 === v.data("colored")) {
                    var h = k.fromskin ? "faceshape" : a;
                    var l = v.data("fillType");
                    var m = !1;
                    l = J(l, h, m);
                    v.attr("fill", l);
                    l = v.data("strokeType");
                    h = J(l, h, m);
                    v.attr({ stroke: h, "stroke-width": k.strokeWidth, "stroke-linecap": k.strokeLinecap, "stroke-linejoin": k.strokeLinejoin, "stroke-miterlimit": k.strokeMiterlimit });
                } else
                    "gradient" === k.fill
                        ? (H ? V("svga-on-canvas-" + a + "-gradient-" + d + "-" + f) : (h = document.getElementById("svga-" + a + "-gradient-" + d + "-" + c + "-" + f)) && h.parentNode.removeChild(h),
                          (h = g.gradient(k.type, A)),
                          k.x1 && h.attr({ x1: k.x1 }),
                          k.y1 && h.attr({ y1: k.y1 }),
                          k.x2 && h.attr({ x2: k.x2 }),
                          k.y2 && h.attr({ y2: k.y2 }),
                          k.cx && h.attr({ cx: k.cx }),
                          k.cy && h.attr({ cy: k.cy }),
                          k.fx && h.attr({ fx: k.fx }),
                          k.fy && h.attr({ fy: k.fy }),
                          k.r && h.attr({ r: k.r }),
                          k.gradientTransform && h.attr({ gradientTransform: k.gradientTransform }),
                          k.gradientUnits && h.attr({ gradientUnits: k.gradientUnits }),
                          H ? h.attr("class", "svga-on-canvas-" + a + "-gradient-" + d + "-" + f) : h.attr("id", "svga-" + a + "-gradient-" + d + "-" + c + "-" + f),
                          v.attr({ fill: h }))
                        : (v.attr({ fill: k.fill }), v.attr({ stroke: k.stroke, "stroke-width": k.strokeWidth, "stroke-linecap": k.strokeLinecap, "stroke-linejoin": k.strokeLinejoin, "stroke-miterlimit": k.strokeMiterlimit }));
                k.opacity && v.attr({ opacity: k.opacity });
                H &&
                    (k.id && v.attr("id", k.id + "-" + d),
                    "eyesback" === a && b.get("svga-group-eyesiriswrapper-" + d).transform({ x: 0, y: 0 }),
                    (k.irisx || k.irisy) && b.get("svga-group-eyesiriswrapper-" + d).move(k.irisx, k.irisy),
                    "hair" === a && k.hideears
                        ? (b.get("svga-group-ears-left-move").hide(), b.get("svga-group-ears-right-move").hide())
                        : "hair" === a && (b.get("svga-group-ears-left-move").show(), b.get("svga-group-ears-right-move").show()));
                !H && k.hideonthumbs && v.remove();
                H && k.hideoncanvas && v.remove();
            }
        }
        function J(a, b, e) {
            switch (a) {
                case "none":
                    b = "none";
                    break;
                case "tone":
                    b = w[b];
                    break;
                case "hl05":
                    b = D(w[b], -0.5 * c.saturationDelta, 0.5 * c.brightnessDelta);
                    break;
                case "hl1":
                    b = D(w[b], -c.saturationDelta, c.brightnessDelta);
                    break;
                case "hl2":
                    b = D(w[b], -2 * c.saturationDelta, 2 * c.brightnessDelta);
                    break;
                case "sd05":
                    b = D(w[b], 0.5 * c.saturationDelta, -0.5 * c.brightnessDelta);
                    break;
                case "sd1":
                    b = D(w[b], c.saturationDelta, -c.brightnessDelta);
                    break;
                case "sd2":
                    b = D(w[b], 2 * c.saturationDelta, -2 * c.brightnessDelta);
                    break;
                case "sd3":
                    b = D(w[b], 3 * c.saturationDelta, -3 * c.brightnessDelta);
                    break;
                case "sd35":
                    b = D(w[b], 3.5 * c.saturationDelta, -3.5 * c.brightnessDelta);
                    break;
                default:
                    (b = w[b]), e && (b = a);
            }
            return b;
        }
        function E(a, c) {
            var g = a.length,
                d,
                f = function (g, e) {
                    if (this.data("colored")) {
                        var c = !0 === this.data("fromskin") ? "faceshape" : a[d];
                        var f = this.data("fillType");
                        var h = !1;
                        f = J(f, c, h);
                        this.attr("fill", f);
                        f = this.data("strokeType");
                        f = J(f, c, h);
                        this.stroke(f);
                    } else
                        "gradient" === this.data("fillType") &&
                            ((f = this.attr("fill")), (f = f.replace(/url\(#/, "").replace(/\)/, "")), (f = b.get(f))) &&
                            ((c = !0 === this.data("fromskin") ? "faceshape" : a[d]),
                            f.each(function (a, g) {
                                h = !0;
                                var d = this.data("stoptype");
                                d = J(d, c, h);
                                this.update({ color: d });
                            }));
                };
            for (d = 0; d < g; d++) {
                1 < g && "mouth" !== a[d] && "eyesfront" !== a[d] ? (w[a[d]] = c) : (w[p] = c);
                var h = "facehighlight" === a[d] || "humanbody" === a[d] ? 0 : M[a[d]];
                for (t in e[a[d]].shapes[h])
                    if (e[a[d]].shapes[h].hasOwnProperty(t)) {
                        var P = b.get("svga-group-" + a[d] + "-" + t);
                        P.each(f);
                    }
            }
        }
        function L(a) {
            a = Q(a).toHexString();
            switch (p) {
                case "faceshape":
                    var g = "faceshape humanbody chinshadow facehighlight ears mouth nose eyesfront".split(" ");
                    E(g, a);
                    break;
                case "ears":
                    g = "faceshape humanbody chinshadow facehighlight ears mouth nose eyesfront".split(" ");
                    E(g, a);
                    break;
                case "nose":
                    g = "faceshape humanbody chinshadow facehighlight ears mouth nose eyesfront".split(" ");
                    E(g, a);
                    break;
                default:
                    (g = [p]), E(g, a);
            }
        }
        function Y() {
            w =
                "boys" === A
                    ? {
                          backs: "#ecf0f1",
                          humanbody: "#f0c7b1",
                          clothes: "#386e77",
                          hair: "#2a232b",
                          ears: "#f0c7b1",
                          faceshape: "#f0c7b1",
                          chinshadow: "#f0c7b1",
                          facehighlight: "#f0c7b1",
                          eyebrows: "#2a232b",
                          eyesback: "#000000",
                          eyesfront: "#000000",
                          eyesiris: "#4e60a3",
                          glasses: "#26120B",
                          mustache: "#2a232b",
                          beard: "#2a232b",
                          mouth: "#da7c87",
                      }
                    : {
                          backs: "#ecf0f1",
                          humanbody: "#F3D4CF",
                          clothes: "#09aac5",
                          hair: "#2a232b",
                          ears: "#F3D4CF",
                          faceshape: "#F3D4CF",
                          chinshadow: "#F3D4CF",
                          facehighlight: "#F3D4CF",
                          eyebrows: "#2a232b",
                          eyesback: "#000000",
                          eyesfront: "#000000",
                          eyesiris: "#4e60a3",
                          glasses: "#26120B",
                          mouth: "#f771a9",
                      };
            a("#svga-svgmain").empty();
            h();
            for (var g in e) e.hasOwnProperty(g) && ((u = "backs" === g || "hair" === g ? 1 : 0), e.hasOwnProperty(g) && a("#svga-elements-" + g + "-" + u).trigger("click"));
            a("#svga-colors-faceshape > div:nth-child(1)").trigger("click");
            l = 2;
            R = !1;
        }
        function N() {
            Y();
            var g = y(0, 19);
            if (1 < y(0, 2))
                if (0 === y(0, 1)) {
                    var b = !0;
                    var c = !1;
                } else (b = !1), (c = !0);
            for (var d in e)
                if (e.hasOwnProperty(d)) {
                    var f = !1;
                    switch (d) {
                        case "ears":
                            f = y(0, 6);
                            break;
                        case "eyesiris":
                            f = y(0, 7);
                            break;
                        case "hair":
                            f = "boys" === A ? y(0, 17) : y(0, 14);
                            break;
                        case "mustache":
                            b && (f = y(1, 12));
                            break;
                        case "beard":
                            c && (f = y(1, 12));
                            break;
                        case "glasses":
                            1 < y(0, 2) && (f = y(0, 17));
                            break;
                        default:
                            f = y(0, 14);
                    }
                    var h = y(0, 19);
                    f &&
                        ("hair" === d || "mustache" === d || "beard" === d || "eyebrows" === d
                            ? (a("#svga-elements-" + d + "-" + f).trigger("click"), (p = d), a("#svga-colors-" + p + " > div:nth-child(" + g + ")").trigger("click"))
                            : (a("#svga-elements-" + d + "-" + f).trigger("click"), (p = d), a("#svga-colors-" + p + " > div:nth-child(" + h + ")").trigger("click")));
                }
            a("#svga-blocks-face").trigger("click");
            a("#svga-bodyzones-faceshape").trigger("click");
            a("#svga-colors-faceshape .svga-active").trigger("click");
            l = 2;
            R = !0;
        }
        function I(g) {
            a("#svga-loader").hide();
            a("#svga-gravatar-message-text").html(g).addClass("svga-error");
            a("#svga-work-overlay").fadeIn("fast");
            a("#svga-gravatar-message").fadeIn("fast");
        }
        function S(a, b) {
            new (function (a) {
                var g, b, e;
                this.url = a;
                this.fileRequest = function (d, f) {
                    a &&
                        ((g = document.createElement("input")),
                        g.setAttribute("name", "filename"),
                        g.setAttribute("value", d),
                        (b = document.createElement("input")),
                        b.setAttribute("name", "downloadingname"),
                        b.setAttribute("value", c.downloadingName),
                        (e = document.createElement("form")),
                        (e.method = "get"),
                        (e.action = a),
                        (e.target = "_top"),
                        e.appendChild(g),
                        e.appendChild(b),
                        document.body.appendChild(e),
                        e.submit(),
                        document.body.removeChild(e));
                };
            })(c.pathToFolder + "php/download-temp-avatar.php").fileRequest(a, b);
        }
        function V(a) {
            for (a = document.getElementsByClassName(a); 0 < a.length; ) a[0].parentNode.removeChild(a[0]);
        }
        function D(a, b, e) {
            a = Q(a).toHsv();
            a.s += b;
            0 > a.s && (a.s = 0);
            1 < a.s && (a.s = 1);
            a.v += e;
            0 > a.v && (a.v = 0);
            1 < a.v && (a.v = 1);
            return Q(a).toHexString();
        }
        function y(a, b) {
            return Math.floor(Math.random() * (b - a + 1)) + a;
        }
        if ("boys" === A) {
            var w = {
                backs: "#ecf0f1",
                humanbody: "#f0c7b1",
                clothes: "#386e77",
                hair: "#2a232b",
                ears: "#f0c7b1",
                faceshape: "#f0c7b1",
                chinshadow: "#f0c7b1",
                facehighlight: "#f0c7b1",
                eyebrows: "#2a232b",
                eyesback: "#000000",
                eyesfront: "#000000",
                eyesiris: "#4e60a3",
                glasses: "#26120B",
                mustache: "#2a232b",
                beard: "#2a232b",
                mouth: "#da7c87",
            };
            a("#svga-container").addClass("svga-boys");
        } else if ("girls" === A)
            (w = {
                backs: "#ecf0f1",
                humanbody: "#F3D4CF",
                clothes: "#09aac5",
                hair: "#2a232b",
                ears: "#F3D4CF",
                faceshape: "#F3D4CF",
                chinshadow: "#F3D4CF",
                facehighlight: "#F3D4CF",
                eyebrows: "#2a232b",
                eyesback: "#000000",
                eyesfront: "#000000",
                eyesiris: "#4e60a3",
                glasses: "#26120B",
                mouth: "#f771a9",
            }),
                a("#svga-container").addClass("svga-girls");
        else return;
        var z = ["face", "eyes", "hair", "clothes", "backs"];
        var F =
            "boys" === A
                ? "backs faceshape chinshadow facehighlight humanbody clothes hair ears eyebrows eyesback eyesiris eyesfront glasses mouth mustache beard nose".split(" ")
                : "backs faceshape chinshadow facehighlight humanbody clothes hair ears eyebrows eyesback eyesiris eyesfront glasses mouth nose".split(" ");
        var M = {},
            x = {
                up:
                    "M8.425,3.176c-0.235-0.234-0.614-0.234-0.849,0L2.769,7.984c-0.235,0.234-0.235,0.613,0,0.85l0.565,0.564c0.234,0.235,0.614,0.235,0.849,0L7,6.58V12.4C7,12.732,7.268,13,7.6,13H8.4C8.731,13,9,12.73,9,12.4V6.58l2.818,2.819c0.234,0.234,0.614,0.234,0.849,0l0.565-0.566c0.234-0.234,0.234-0.613,0-0.848L8.425,3.176z",
                down:
                    "M7.575,12.824c0.235,0.234,0.614,0.234,0.849,0l4.808-4.809c0.235-0.234,0.235-0.613,0-0.85l-0.565-0.564c-0.234-0.235-0.614-0.235-0.849,0L9,9.42V3.6C9,3.268,8.732,3,8.4,3H7.6C7.269,3,7,3.27,7,3.6v5.82L4.182,6.602c-0.234-0.234-0.615-0.234-0.849,0L2.768,7.168c-0.234,0.234-0.234,0.613,0,0.848L7.575,12.824z",
                left:
                    "M3.176,7.575c-0.234,0.235-0.234,0.614,0,0.849l4.809,4.808c0.234,0.235,0.613,0.235,0.85,0l0.564-0.565c0.235-0.234,0.235-0.614,0-0.849L6.58,9H12.4C12.732,9,13,8.732,13,8.4V7.6C13,7.269,12.73,7,12.4,7H6.58l2.819-2.818c0.234-0.234,0.234-0.615,0-0.849L8.832,2.768c-0.234-0.234-0.613-0.234-0.848,0L3.176,7.575z",
                right:
                    "M12.824,8.425c0.234-0.235,0.234-0.614,0-0.849L8.016,2.769c-0.234-0.235-0.613-0.235-0.85,0L6.602,3.334c-0.235,0.234-0.235,0.614,0,0.849L9.42,7H3.6C3.268,7,3,7.268,3,7.6V8.4C3,8.731,3.27,9,3.6,9h5.82l-2.818,2.818c-0.234,0.234-0.234,0.614,0,0.849l0.566,0.565c0.234,0.234,0.613,0.234,0.848,0L12.824,8.425z",
                tightly:
                    "M12.594,8l3.241,3.205c0.22,0.216,0.22,0.567,0,0.783l-0.858,0.85c-0.219,0.217-0.575,0.217-0.795,0L9.683,8.393c-0.221-0.216-0.221-0.568,0-0.785l4.499-4.445c0.22-0.217,0.576-0.217,0.795,0l0.858,0.849c0.22,0.217,0.22,0.568,0,0.785L12.594,8z M0.164,11.205c-0.219,0.216-0.219,0.567,0,0.783l0.859,0.85c0.221,0.217,0.575,0.217,0.795,0l4.499-4.445c0.22-0.217,0.22-0.568,0-0.785L1.818,3.163c-0.221-0.217-0.576-0.217-0.795,0L0.164,4.012c-0.219,0.217-0.219,0.568,0,0.785L3.405,8L0.164,11.205z",
                wider:
                    "M3.039,8.001l3.203,3.203c0.217,0.216,0.217,0.567,0,0.784l-0.85,0.85c-0.217,0.217-0.567,0.217-0.785,0L0.163,8.393c-0.217-0.216-0.217-0.568,0-0.785l4.444-4.445c0.218-0.217,0.568-0.217,0.785,0l0.85,0.849c0.217,0.217,0.217,0.568,0,0.785L3.039,8.001z M9.758,11.204c-0.217,0.216-0.217,0.567,0,0.784l0.85,0.849c0.217,0.218,0.568,0.218,0.785,0l4.445-4.444c0.217-0.218,0.217-0.568,0-0.785l-4.445-4.445c-0.219-0.217-0.568-0.217-0.785,0l-0.85,0.849c-0.217,0.217-0.217,0.568,0,0.785l3.203,3.204L9.758,11.204z",
                scaledown:
                    "M13.974,12.904l-2.716-2.715c-0.222-0.223-0.582-0.223-0.804,0L8.82,8.541c0.708-0.799,1.229-1.865,1.229-3.017C10.049,3.026,8.023,1,5.524,1S1,3.026,1,5.524c0,2.499,2.025,4.524,4.524,4.524c0.899,0,1.791-0.307,2.496-0.758l1.63,1.701c-0.223,0.223-0.223,0.582,0,0.805l2.716,2.717c0.222,0.221,0.582,0.221,0.804,0l0.804-0.805C14.196,13.486,14.196,13.127,13.974,12.904z M5.485,8.461c-1.662,0-3.009-1.378-3.009-3.041s1.347-3.009,3.009-3.009c1.661,0,3.071,1.347,3.071,3.009S7.146,8.461,5.485,8.461z M7.5,6h-4V5h4V6z",
                scaleup:
                    "M13.974,12.904l-2.716-2.715c-0.222-0.223-0.582-0.223-0.804,0L8.82,8.541c0.708-0.799,1.229-1.865,1.229-3.016C10.049,3.026,8.023,1,5.524,1S1,3.026,1,5.524c0,2.499,2.025,4.524,4.524,4.524c0.899,0,1.792-0.307,2.496-0.758l1.63,1.701c-0.223,0.223-0.223,0.582,0,0.805l2.716,2.717c0.222,0.221,0.582,0.221,0.804,0l0.804-0.805C14.196,13.486,14.196,13.127,13.974,12.904z M5.485,8.46c-1.662,0-3.009-1.378-3.009-3.04c0-1.662,1.347-3.009,3.009-3.009c1.661,0,3.071,1.347,3.071,3.009C8.557,7.082,7.146,8.46,5.485,8.46z M7.5,6H6v1.5H5V6H3.5V5H5V3.5h1V5h1.5V6z",
                eb1:
                    "M5.453,8.316C5.129,7.499,4.146,6.352,1.492,5.521C1.087,5.393,0.868,4.982,1.003,4.602c0.135-0.379,0.572-0.586,0.98-0.458c2.996,0.938,4.917,2.505,5.015,4.088c0.026,0.4-0.3,0.767-0.728,0.767C5.875,8.998,5.531,8.514,5.453,8.316z M9.021,8.313C8.66,8.077,8.593,7.626,8.841,7.301c0.983-1.288,3.5-1.651,6.569-0.948c0.415,0.095,0.669,0.489,0.567,0.877c-0.102,0.39-0.518,0.628-0.937,0.533c-2.718-0.623-4.315-0.188-4.939,0.282C9.908,8.191,9.5,8.625,9.021,8.313z",
                eb2:
                    "M9.729,8.998c-0.428,0-0.753-0.366-0.728-0.767c0.098-1.583,2.02-3.149,5.016-4.088c0.407-0.128,0.845,0.079,0.979,0.458c0.136,0.38-0.083,0.792-0.488,0.919c-2.654,0.831-3.638,1.978-3.961,2.796C10.469,8.514,10.125,8.998,9.729,8.998z M5.898,8.045C5.274,7.576,3.677,7.141,0.959,7.764C0.54,7.858,0.124,7.62,0.022,7.23C-0.079,6.842,0.175,6.448,0.59,6.353c3.069-0.703,5.586-0.34,6.569,0.948c0.248,0.325,0.181,0.776-0.18,1.012C6.5,8.625,6.092,8.191,5.898,8.045z",
                eb3:
                    "M5.453,8.316C5.129,7.499,4.146,6.352,1.492,5.521C1.087,5.393,0.868,4.982,1.003,4.602c0.135-0.379,0.572-0.586,0.98-0.458c2.996,0.938,4.917,2.505,5.015,4.088c0.026,0.4-0.3,0.767-0.728,0.767C5.875,8.998,5.531,8.514,5.453,8.316z M9.729,8.998c-0.428,0-0.753-0.366-0.728-0.767c0.098-1.583,2.02-3.149,5.016-4.088c0.407-0.128,0.845,0.079,0.979,0.458c0.136,0.38-0.083,0.792-0.488,0.919c-2.654,0.831-3.638,1.978-3.961,2.796C10.469,8.514,10.125,8.998,9.729,8.998z",
                eb4:
                    "M5.728,6.662C4.873,6.458,3.369,6.605,1.166,8.303C0.829,8.562,0.367,8.506,0.133,8.176C-0.1,7.848-0.019,7.371,0.32,7.111C2.807,5.195,5.192,4.52,6.545,5.348c0.343,0.208,0.456,0.685,0.211,1.036C6.528,6.708,5.935,6.711,5.728,6.662z M9.244,6.383C8.999,6.033,9.111,5.556,9.455,5.348c1.353-0.828,3.737-0.152,6.225,1.764c0.339,0.26,0.421,0.737,0.187,1.065c-0.233,0.33-0.695,0.386-1.032,0.127c-2.203-1.698-3.707-1.845-4.563-1.641C10.065,6.712,9.471,6.708,9.244,6.383z",
                ebcancel:
                    "M11.294,3.091l1.617,1.615c0.119,0.12,0.119,0.315,0,0.436L10.052,8l2.858,2.858c0.12,0.12,0.12,0.314,0.001,0.435l-1.617,1.618c-0.12,0.119-0.314,0.119-0.435-0.001l-2.858-2.859l-2.86,2.86c-0.12,0.119-0.314,0.119-0.435-0.001L3.09,11.293c-0.12-0.12-0.12-0.314,0-0.435L5.949,8L3.09,5.142c-0.12-0.12-0.12-0.315,0-0.436l1.616-1.615c0.12-0.121,0.314-0.121,0.435,0l2.86,2.858l2.858-2.858C10.979,2.97,11.174,2.97,11.294,3.091z",
                tiltleft:
                    "M13.399,10h-0.851c-0.165,0-0.299-0.135-0.31-0.3C12.085,7.494,10.244,5.75,8,5.75c-1.393,0-2.627,0.67-3.402,1.705l1.335,1.333C6.049,8.904,6.01,9,5.845,9H2.3C2.135,9,2,8.865,2,8.699V5.156C2,4.99,2.095,4.951,2.212,5.068l1.354,1.354C4.611,5.129,6.208,4.3,8,4.3c3.047,0,5.535,2.393,5.691,5.4C13.7,9.865,13.564,10,13.399,10z",
                tiltright:
                    "M2.309,9.7C2.465,6.693,4.953,4.3,8,4.3c1.792,0,3.389,0.829,4.434,2.122l1.354-1.354C13.905,4.951,14,4.99,14,5.156v3.543C14,8.865,13.865,9,13.7,9h-3.545C9.99,9,9.951,8.904,10.067,8.787l1.335-1.333C10.627,6.42,9.393,5.75,8,5.75c-2.244,0-4.085,1.744-4.239,3.95C3.75,9.865,3.616,10,3.451,10h-0.85C2.435,10,2.3,9.865,2.309,9.7z",
                back: "M1.17,6.438l4.406,4.428C5.811,11.1,6,11.021,6,10.689V8c0,0,8,0,8,7C14,3,6,4,6,4V1.311c0-0.332-0.189-0.41-0.424-0.176L1.17,5.563C0.943,5.805,0.943,6.197,1.17,6.438z",
                forward: "M14.829,6.438l-4.405,4.428C10.189,11.1,10,11.021,10,10.689V8c0,0-8,0-8,7C2,3,10,4,10,4V1.311c0-0.332,0.189-0.41,0.424-0.176l4.405,4.429C15.057,5.805,15.057,6.197,14.829,6.438z",
                random:
                    "M24.311,14.514c-0.681,0-1.225,0.553-1.318,1.227c-0.599,4.243-4.245,7.512-8.655,7.512c-2.86,0-6.168-2.057-7.711-4.112l-3.655-4.412c-0.196-0.205-0.547-0.292-0.74-0.131C2.107,14.702,2,14.833,2,14.974v9.503c0,0.339,0.194,0.42,0.436,0.181l2.782-2.782c2.149,2.658,5.436,4.358,9.119,4.358c6.056,0,11.04-4.594,11.657-10.489c0.072-0.678-0.488-1.231-1.169-1.231H24.311z M3.689,13.486c0.681,0,1.225-0.553,1.319-1.227c0.598-4.243,4.245-7.512,8.654-7.512c2.861,0,5.816,1.542,7.71,4.112l3.655,4.412c0.195,0.205,0.547,0.293,0.739,0.13C25.893,13.299,26,13.167,26,13.026V3.522c0-0.339-0.195-0.419-0.437-0.181l-2.782,2.784c-2.149-2.659-5.435-4.36-9.119-4.36c-6.056,0-11.04,4.595-11.656,10.49c-0.072,0.678,0.488,1.231,1.169,1.231H3.689z M15.277,16.982h-1.896l-0.006-0.231c-0.026-1.809,1.087-2.446,2.282-3.581c1.224-1.162-0.229-2.5-1.542-2.339c-0.789,0.097-1.337,0.646-1.574,1.385c-0.166,0.517-0.158,0.653-0.158,0.653l-1.744-0.545c0.051-0.838,0.446-1.583,1.071-2.137c1.202-1.06,3.252-1.16,4.651-0.442c1.418,0.727,2.229,2.522,1.196,3.913C16.638,14.899,15.247,15.266,15.277,16.982z M13.382,19.719v-1.977h1.974v1.977H13.382z",
                reset:
                    "M5.515,5.515c-4.686,4.686-4.686,12.284,0,16.971c4.687,4.687,12.284,4.686,16.971,0c4.687-4.687,4.687-12.284,0-16.971C17.799,0.829,10.201,0.828,5.515,5.515z M6.929,6.929C10.595,3.263,16.4,3.04,20.328,6.258L6.257,20.328C3.04,16.4,3.263,10.595,6.929,6.929z M21.071,21.071c-3.667,3.666-9.471,3.89-13.4,0.671l14.071-14.07C24.961,11.601,24.737,17.405,21.071,21.071z",
                save:
                    "M25.64,7.142l-4.761-4.779C20.679,2.162,20.282,2,20,2H3.026C2.458,2,2,2.459,2,3.027v21.946C2,25.539,2.458,26,3.026,26h21.947C25.541,26,26,25.539,26,24.974V8.02C26,7.736,25.839,7.341,25.64,7.142z M14,4v5h-4V4H14z M20,24H8v-8h12V24z M24,24h-2v-8.973C22,14.461,21.541,14,20.969,14H7.027C6.458,14,6,14.461,6,15.027V24H4V4h2v4.97C6,9.538,6.458,10,7.027,10h7.862C15.456,10,16,9.538,16,8.97V4h3.146c0.281,0,0.674,0.162,0.873,0.363l3.623,3.257C23.838,7.817,24,8.212,24,8.495V24z M19,18H9v-1h10V18z M19,20H9v-1h10V20z M19,22H9v-1h10V22z",
                download:
                    "M28,24.8c0,0.663-0.537,1.2-1.2,1.2H1.2C0.537,26,0,25.463,0,24.8v-4.2C0,20.293,0.297,20,0.6,20H3.4C3.703,20,4,20.293,4,20.6V22h20v-1.4c0-0.307,0.299-0.6,0.601-0.6h2.8c0.302,0,0.6,0.293,0.6,0.6V24.8z M14.873,19.658l8.857-8.811C24.199,10.379,24.043,10,23.379,10H18V3.2C18,2.538,17.463,2,16.801,2H11.2C10.537,2,10,2.538,10,3.2V10H4.621c-0.662,0-0.82,0.379-0.352,0.848l8.855,8.811C13.607,20.113,14.391,20.113,14.873,19.658z",
                gravatar:
                    "M16.39,7.2c0,0.19,0,5.34,0,5.53c-0.03,3.21-4.73,3.26-4.76,0.04c-0.01-1.37-0.01-7.55,0-8.25c0.01-1.54,1.01-2.53,2.54-2.52c5.75,0.05,10.74,4.38,11.62,10.07c1.01,6.54-3.25,12.55-9.72,13.74c-10.9,2-18.81-11.34-10.64-20.16c2.23-2.4,5.84,0.85,3.56,3.24C4.1,14,8.12,21.58,14.54,21.13C22.24,20.58,23.72,9.79,16.39,7.2z",
                share:
                    "M21.32,19.51l-3.7-2.61c0.66-1.59,0.46-3.4-0.58-4.83l3.01-3.4C22.39,9.74,25,8.03,25,5.5C25,3.57,23.43,2,21.5,2c-2.74,0-4.43,3.03-2.95,5.37l-2.98,3.36c-1.51-0.91-3.33-1.01-5-0.07L7.62,7.44C7.85,7.01,8,6.52,8,6c0-3.96-6-3.97-6,0c0,2.14,2.17,3.59,4.15,2.77l2.91,3.19c-1.41,1.82-1.41,4.25-0.02,6.07l-2.8,3.1C4.57,20.6,3,21.87,3,23.5C3,24.88,4.12,26,5.5,26c1.8,0,3.06-1.87,2.25-3.57l2.8-3.1c2.08,1.18,4.46,0.72,5.97-0.79l3.63,2.56C18.74,25.57,26,26.53,26,22C26,19.58,23.29,18.18,21.32,19.51z",
                twitter:
                    "M27 2H5C3.34 2 2 3.34 2 5v22c0 1.66 1.34 3 3 3h22c1.66 0 3-1.34 3-3V5C30 3.34 28.66 2 27 2zM24.75 11.57c0.26 6.54-4.58 13.43-12.83 13.43 -3.9 0-6.55-1.75-6.92-2.03 3.58 0.47 6.14-1.37 6.68-1.87 -2.1 0.04-3.84-1.7-4.22-3.13 1.02 0.24 2.04-0.08 2.04-0.08 -2.49-0.5-3.68-2.79-3.62-4.48 0.77 0.4 1.32 0.5 2.04 0.56 -1.74-1.17-2.74-3.73-1.4-6.03 3.69 4.4 8.37 4.67 9.3 4.72 -0.86-4.93 4.74-7.25 7.69-4.12 1.03-0.2 1.99-0.58 2.86-1.09 -0.34 1.05-1.05 1.94-1.98 2.5C25.32 9.84 26.19 9.6 27 9.24 26.39 10.14 25.63 10.94 24.75 11.57z",
                pinterest:
                    "M27 2H5C3.34 2 2 3.34 2 5v22c0 1.66 1.34 3 3 3h22c1.66 0 3-1.34 3-3V5C30 3.34 28.66 2 27 2zM17.36 20.23c-1.28-0.1-1.81-0.73-2.82-1.34C14 21.78 13.32 24.55 11.33 26c-0.62-4.37 0.9-7.65 1.61-11.13 -1.2-2.03 0.15-6.1 2.68-5.1 3.12 1.24-2.71 7.53 1.21 8.32 4.09 0.82 5.75-7.09 3.22-9.66 -3.66-3.71-10.66-0.08-9.8 5.23 0.21 1.3 1.55 1.69 0.54 3.49C5.64 16 7.18 5.94 14.95 5.07 27.93 3.62 25.78 20.89 17.36 20.23L17.36 20.23z",
            },
            T = "up down left right tightly wider scaledown scaleup eb1 eb2 eb3 eb4 ebcancel".split(" "),
            K = "up down left right scaledown scaleup tiltleft tiltright".split(" "),
            Z = "random reset save share gravatar download".split(" "),
            aa = ["twitter", "pinterest"],
            W = ["#19A6CA", "#CB2028"],
            O = { backs: "backs", face: "faceshape", eyes: "eyesfront", hair: "hair", clothes: "clothes" },
            l = 1,
            H = !1,
            p = "faceshape",
            U,
            R = !1,
            q,
            r;
        h();
        for (var m = 0; m < z.length; m++) a("#svga-blocks").append('<div id="svga-blocks-' + z[m] + '" class="svga-blocks" data-blockname="' + z[m] + '">' + f.blockTitles[z[m]] + "</div>");
        a(".svga-blocks:last").addClass("svga-last");
        a("#svga-blocks-backs").data("bodyzones", "backs");
        a("#svga-blocks-face").data("bodyzones", "faceshape,nose,mouth,ears");
        a("#svga-blocks-eyes").data("bodyzones", "eyesfront,eyesiris,eyebrows,glasses");
        "boys" === A ? a("#svga-blocks-hair").data("bodyzones", "hair,mustache,beard") : a("#svga-blocks-hair").data("bodyzones", "hair");
        a("#svga-blocks-clothes").data("bodyzones", "clothes");
        for (var n in e)
            e.hasOwnProperty(n) &&
                (a("#svga-bodyzones").append('<div id="svga-bodyzones-' + n + '" class="svga-bodyzones" data-bodyzone="' + n + '" data-controls="' + e[n].controls + '" data-block="' + e[n].block + '">' + f.bodyZoneTitles[n] + "</div>"),
                a("#svga-bodyzones-" + n).hide());
        for (var B in x)
            x.hasOwnProperty(B) &&
                -1 < T.indexOf(B) &&
                (a("#svga-controls").append(
                    '<div id="svga-controls-' +
                        B +
                        '" class="svga-controls"><svg class="svga-control-icon" xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 16 16" preserveAspectRatio="xMinYMin meet"><path class="svga-control-icon-path" d="' +
                        x[B] +
                        '"/></svg></div>'
                ),
                a("#svga-controls-" + B).hide());
        for (B in x)
            x.hasOwnProperty(B) &&
                -1 < K.indexOf(B) &&
                a("#svga-glob-controls").append(
                    '<div id="svga-glob-controls-' +
                        B +
                        '" class="svga-glob-controls"><svg class="svga-control-icon" xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 16 16" preserveAspectRatio="xMinYMin meet"><path class="svga-control-icon-path" d="' +
                        x[B] +
                        '"/></svg></div>'
                );
        for (m = 0; m < Z.length; m++)
            a("#svga-" + Z[m] + "avatar > div").append(
                '<svg class="svga-menu-icon" xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 28 28" preserveAspectRatio="xMinYMin meet"><path class="svga-menu-icon-path" d="' + x[Z[m]] + '"/></svg>'
            );
        for (m = 0; m < aa.length; m++)
            a("#svga-" + aa[m] + "-icon").append(
                '<svg class="svga-share-icons" xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 32 32" preserveAspectRatio="xMinYMin meet"><path class="svga-share-icons-path" fill="' + W[m] + '" d="' + x[aa[m]] + '"/></svg>'
            );
        var t;
        for (n in e)
            if (e.hasOwnProperty(n)) {
                x = e[n].scaleFactor;
                T = e[n].colors;
                a("#svga-elements").append('<div class="svga-elements-wrap" id="svga-elements-' + n + '"></div>');
                for (m = 0; m < e[n].shapes.length; m++) {
                    a("#svga-elements-" + n).append('<div class="svga-elements" id="svga-elements-' + n + "-" + m + '" data-zone="' + n + '" data-shape="' + m + '"></div>');
                    z = b("svga-elements-" + n + "-" + m)
                        .size("100%", "100%")
                        .attr({ id: "svga-svgcanvas-elements-" + n + "-" + m, width: null, height: null, class: "svga-svg", viewBox: "0 0 200 200", preserveAspectRatio: "xMinYMin meet" })
                        .group();
                    var u = m;
                    for (t in e[n].shapes[u])
                        !e[n].shapes[u].hasOwnProperty(t) ||
                            ("right" !== t && "single" !== t && "back" !== t && "front" !== t) ||
                            (e[n].shapes[u][t].length
                                ? (X(z, n, u, t),
                                  (K = z.bbox()),
                                  z
                                      .transform({ scale: x })
                                      .transform({ x: -K.x * x + (200 - K.width * x) / 2 })
                                      .transform({ y: -K.y * x + (200 - K.height * x) / 2 }),
                                  "clothes" === n && z.move(10, 5),
                                  "hair" === n && 0 < u && z.move(0, 20))
                                : a("#svga-elements-" + n + "-" + m)
                                      .empty()
                                      .append("<div></div>")
                                      .addClass("empty"));
                }
                a("#svga-elements-" + n).hide();
                a("#svga-colors").append('<div id="svga-colors-' + n + '" class="svga-colors-set"></div>');
                for (m = 0; m < T.length; m++) a("#svga-colors-" + n).append("<div></div>"), a("#svga-colors-" + n + " div:last-child").css("background-color", T[m]);
                a("#svga-colors-" + n).hide();
            }
        a("#svga-custom-color").hide();
        for (m = u = 0; m < F.length; m++) {
            if ("backs" === F[m] || "hair" === F[m]) u = 1;
            for (t in e[F[m]].shapes[u]) e[F[m]].shapes[u].hasOwnProperty(t) && ((n = "svga-group-" + F[m] + "-" + t), a("#" + n).empty(), (z = b.get(n)), (H = !0), X(z, F[m], u, t));
            M[F[m]] = u;
            u = 0;
        }
        a(".svga-colors-set > div").on("click", function () {
            var g = a(this);
            g.siblings().removeClass("svga-active");
            g.addClass("svga-active");
            u = 0;
            var b = g.css("background-color");
            b = Q(b).toHexString();
            a("#svga-custom-color > input").spectrum("set", b);
            switch (p) {
                case "faceshape":
                    g = "faceshape humanbody chinshadow facehighlight ears mouth nose eyesfront".split(" ");
                    E(g, b);
                    break;
                case "ears":
                    g = "faceshape humanbody chinshadow facehighlight ears mouth nose eyesfront".split(" ");
                    E(g, b);
                    break;
                case "nose":
                    g = "faceshape humanbody chinshadow facehighlight ears mouth nose eyesfront".split(" ");
                    E(g, b);
                    break;
                default:
                    (g = [p]), E(g, b);
            }
            l = ++l;
        });
        a("#svga-custom-color > input").spectrum({ color: "#000000", clickoutFiresChange: !0, showInput: !0, showInitial: !0, showButtons: !1, move: L, change: L });
        a(".sp-replacer").on("click", function () {
            a("#svga-colors-" + p + " div.svga-active").removeClass("svga-active");
            l = ++l;
        });
        a(".svga-blocks").on("click", function () {
            var g = a(this),
                b = g.data("bodyzones").split(","),
                e = g.data("blockname");
            g.siblings().removeClass("svga-active");
            g.addClass("svga-active");
            a("#svga-bodyzones").children().hide();
            for (g = 0; g < b.length; g++) a("#svga-bodyzones-" + b[g]).show();
            a("#svga-bodyzones").children().removeClass("svga-active");
            a("#svga-bodyzones-" + O[e])
                .addClass("svga-active")
                .trigger("click");
        });
        a(".svga-bodyzones").on("click", function () {
            var g = a(this);
            p = g.data("bodyzone");
            var b = g.data("block"),
                f = g.data("controls").split(",");
            g.siblings().removeClass("svga-active");
            g.addClass("svga-active");
            a("#svga-elements").children().hide();
            a("#svga-elements-" + p).show();
            a("#svga-colors").children().hide();
            a("#svga-custom-color").hide();
            e[p].colors && (a("#svga-colors-" + p).show(), a("#svga-custom-color").show());
            a("#svga-controls").children().hide();
            for (g = 0; g < f.length; g++) a("#svga-controls-" + f[g]).css("display", "inline-block");
            O[b] = p;
            l = --l;
            a("#svga-elements-" + p + "-" + M[p])
                .addClass("svga-active-element")
                .trigger("click");
        });
        a(".svga-elements").on("click", function () {
            var g = a(this),
                f = g.data(),
                c = f.zone;
            c = "eyesfront" === c ? ["eyesback", "eyesfront"] : "faceshape" === c ? ["faceshape", "chinshadow"] : c.split();
            for (var d = 0; d < c.length; d++) {
                a("#svga-custom-color > input").spectrum("set", w[c[d]]);
                u = "facehighlight" === c[d] || "humanbody" === c[d] ? 0 : f.shape;
                for (t in e[c[d]].shapes[u])
                    if (e[c[d]].shapes[u].hasOwnProperty(t)) {
                        var h = b.get("svga-group-" + c[d] + "-" + t);
                        a("#svga-group-" + c[d] + "-" + t).empty();
                        H = !0;
                        X(h, c[d], u, t);
                    }
                g.siblings().removeClass("svga-active-element");
                g.addClass("svga-active-element");
                M[c[d]] = u;
            }
            l = ++l;
        });
        a(".svga-glob-controls").on("click", function () {
            var g = a(this).attr("id"),
                e = b.get("svga-group-humanwrap-move");
            switch (g) {
                case "svga-glob-controls-up":
                    e.svgaUp(3, 2);
                    break;
                case "svga-glob-controls-down":
                    e.svgaDown(3, 2);
                    break;
                case "svga-glob-controls-left":
                    e.svgaLeft(4, 2);
                    break;
                case "svga-glob-controls-right":
                    e.svgaRight(4, 2);
                    break;
                case "svga-glob-controls-scaleup":
                    b.get("svga-group-humanwrap").svgaScaleUp();
                    break;
                case "svga-glob-controls-scaledown":
                    b.get("svga-group-humanwrap").svgaScaleDown();
                    break;
                case "svga-glob-controls-tiltleft":
                    b.get("svga-group-hair-back-move").svgaRotateLeft(1, 3, 100, 150);
                    b.get("svga-group-head").svgaRotateLeft(1, 3, 100, 150);
                    break;
                case "svga-glob-controls-tiltright":
                    b.get("svga-group-hair-back-move").svgaRotateRight(1, 3, 100, 150), b.get("svga-group-head").svgaRotateRight(1, 3, 100, 150);
            }
            l = ++l;
        });
        a("#svga-controls-up").on("click", function () {
            switch (p) {
                case "mouth":
                    var a = b.get("svga-group-mouth-single-move");
                    a.svgaUp();
                    break;
                case "ears":
                    a = b.get("svga-group-ears-left-move");
                    a.svgaUp(1);
                    a = b.get("svga-group-ears-right-move");
                    a.svgaUp(1);
                    break;
                case "nose":
                    a = b.get("svga-group-nose-single-move");
                    a.svgaUp(4);
                    break;
                case "eyebrows":
                    a = b.get("svga-group-eyebrows-left-move");
                    a.svgaUp(4);
                    a = b.get("svga-group-eyebrows-right-move");
                    a.svgaUp(4);
                    break;
                case "eyesfront":
                    a = b.get("svga-group-eyes-left-move");
                    a.svgaUp(2);
                    a = b.get("svga-group-eyes-right-move");
                    a.svgaUp(2);
                    break;
                case "eyesiris":
                    a = b.get("svga-group-eyesiriscontrol-left");
                    a.svgaUp();
                    a = b.get("svga-group-eyesiriscontrol-right");
                    a.svgaUp();
                    break;
                case "mustache":
                    a = b.get("svga-group-mustache-single-move");
                    a.svgaUp(4);
                    break;
                case "beard":
                    a = b.get("svga-group-beard-single-move");
                    a.svgaUp(4);
                    break;
                case "glasses":
                    (a = b.get("svga-group-glasses-single-move")), a.svgaUp(5);
            }
            l = ++l;
        });
        a("#svga-controls-down").on("click", function () {
            switch (p) {
                case "mouth":
                    var a = b.get("svga-group-mouth-single-move");
                    a.svgaDown();
                    break;
                case "ears":
                    a = b.get("svga-group-ears-left-move");
                    a.svgaDown(1);
                    a = b.get("svga-group-ears-right-move");
                    a.svgaDown(1);
                    break;
                case "nose":
                    a = b.get("svga-group-nose-single-move");
                    a.svgaDown(4);
                    break;
                case "eyebrows":
                    a = b.get("svga-group-eyebrows-left-move");
                    a.svgaDown(4);
                    a = b.get("svga-group-eyebrows-right-move");
                    a.svgaDown(4);
                    break;
                case "eyesfront":
                    a = b.get("svga-group-eyes-left-move");
                    a.svgaDown(2);
                    a = b.get("svga-group-eyes-right-move");
                    a.svgaDown(2);
                    break;
                case "eyesiris":
                    a = b.get("svga-group-eyesiriscontrol-left");
                    a.svgaDown();
                    a = b.get("svga-group-eyesiriscontrol-right");
                    a.svgaDown();
                    break;
                case "mustache":
                    a = b.get("svga-group-mustache-single-move");
                    a.svgaDown(4);
                    break;
                case "beard":
                    a = b.get("svga-group-beard-single-move");
                    a.svgaDown(4);
                    break;
                case "glasses":
                    (a = b.get("svga-group-glasses-single-move")), a.svgaDown(5);
            }
            l = ++l;
        });
        a("#svga-controls-left").on("click", function () {
            switch (p) {
                case "mouth":
                    var a = b.get("svga-group-mouth-single-move");
                    a.svgaLeft(2, 0.5);
                    break;
                case "nose":
                    a = b.get("svga-group-nose-single-move");
                    a.svgaLeft(2, 0.5);
                    break;
                case "eyesiris":
                    a = b.get("svga-group-eyesiriscontrol-left");
                    a.svgaLeft();
                    a = b.get("svga-group-eyesiriscontrol-right");
                    a.svgaLeft();
                    break;
                case "mustache":
                    a = b.get("svga-group-mustache-single-move");
                    a.svgaLeft(2, 0.5);
                    break;
                case "beard":
                    (a = b.get("svga-group-beard-single-move")), a.svgaLeft(2, 0.5);
            }
            l = ++l;
        });
        a("#svga-controls-right").on("click", function () {
            switch (p) {
                case "mouth":
                    var a = b.get("svga-group-mouth-single-move");
                    a.svgaRight(2, 0.5);
                    break;
                case "nose":
                    a = b.get("svga-group-nose-single-move");
                    a.svgaRight(2, 0.5);
                    break;
                case "eyesiris":
                    a = b.get("svga-group-eyesiriscontrol-left");
                    a.svgaRight();
                    a = b.get("svga-group-eyesiriscontrol-right");
                    a.svgaRight();
                    break;
                case "mustache":
                    a = b.get("svga-group-mustache-single-move");
                    a.svgaRight(2, 0.5);
                    break;
                case "beard":
                    (a = b.get("svga-group-beard-single-move")), a.svgaRight(2, 0.5);
            }
            l = ++l;
        });
        a("#svga-controls-scaleup").on("click", function () {
            switch (p) {
                case "faceshape":
                    var a = b.get("svga-group-faceshape-wrap");
                    a.svgaScaleUp(2, 0.02, 1e-4);
                    a = b.get("svga-group-hair-back");
                    a.svgaScaleUp(2, 0.02, 1e-4);
                    a = b.get("svga-group-hair-front");
                    a.svgaScaleUp(2, 0.02, 1e-4);
                    "boys" === A && ((a = b.get("svga-group-beardwrap")), a.svgaScaleUp(2, 0.02, 1e-4));
                    a = b.get("svga-group-ears-left-move");
                    a.svgaLeft(2, 1.5);
                    a = b.get("svga-group-ears-right-move");
                    a.svgaRight(2, 1.5);
                    break;
                case "mouth":
                    a = b.get("svga-group-mouth-single");
                    a.svgaScaleUp(7);
                    break;
                case "nose":
                    a = b.get("svga-group-nose-single");
                    a.svgaScaleUp(5);
                    break;
                case "ears":
                    a = b.get("svga-group-ears-left");
                    a.svgaScaleUp(1);
                    a = b.get("svga-group-ears-right");
                    a.svgaScaleUp(1);
                    break;
                case "eyebrows":
                    a = b.get("svga-group-eyebrows-left");
                    a.svgaScaleUp();
                    a = b.get("svga-group-eyebrows-right");
                    a.svgaScaleUp();
                    break;
                case "eyesfront":
                    a = b.get("svga-group-eyes-left");
                    a.svgaScaleUp(2);
                    a = b.get("svga-group-eyes-right");
                    a.svgaScaleUp(2);
                    break;
                case "eyesiris":
                    a = b.get("svga-group-eyesiris-left");
                    a.svgaScaleUp(4);
                    a = b.get("svga-group-eyesiris-right");
                    a.svgaScaleUp(4);
                    break;
                case "mustache":
                    a = b.get("svga-group-mustache-single");
                    a.svgaScaleUp(4);
                    break;
                case "beard":
                    a = b.get("svga-group-beard-single");
                    a.svgaScaleUp(3);
                    break;
                case "glasses":
                    (a = b.get("svga-group-glasses-single")), a.svgaScaleUp(3);
            }
            l = ++l;
        });
        a("#svga-controls-scaledown").on("click", function () {
            switch (p) {
                case "faceshape":
                    var a = b.get("svga-group-faceshape-wrap");
                    a.svgaScaleDown(2, 0.02, 1e-4);
                    a = b.get("svga-group-hair-back");
                    a.svgaScaleDown(2, 0.02, 1e-4);
                    a = b.get("svga-group-hair-front");
                    a.svgaScaleDown(2, 0.02, 1e-4);
                    "boys" === A && ((a = b.get("svga-group-beardwrap")), a.svgaScaleDown(2, 0.02, 1e-4));
                    a = b.get("svga-group-ears-left-move");
                    a.svgaRight(2, 1.5);
                    a = b.get("svga-group-ears-right-move");
                    a.svgaLeft(2, 1.5);
                    break;
                case "mouth":
                    a = b.get("svga-group-mouth-single");
                    a.svgaScaleDown(7);
                    break;
                case "nose":
                    a = b.get("svga-group-nose-single");
                    a.svgaScaleDown(5);
                    break;
                case "ears":
                    a = b.get("svga-group-ears-left");
                    a.svgaScaleDown(1);
                    a = b.get("svga-group-ears-right");
                    a.svgaScaleDown(1);
                    break;
                case "eyebrows":
                    a = b.get("svga-group-eyebrows-left");
                    a.svgaScaleDown(2);
                    a = b.get("svga-group-eyebrows-right");
                    a.svgaScaleDown(2);
                    break;
                case "eyesfront":
                    a = b.get("svga-group-eyes-left");
                    a.svgaScaleDown(2);
                    a = b.get("svga-group-eyes-right");
                    a.svgaScaleDown(2);
                    break;
                case "eyesiris":
                    a = b.get("svga-group-eyesiris-left");
                    a.svgaScaleDown(4);
                    a = b.get("svga-group-eyesiris-right");
                    a.svgaScaleDown(4);
                    break;
                case "mustache":
                    a = b.get("svga-group-mustache-single");
                    a.svgaScaleDown(4);
                    break;
                case "beard":
                    a = b.get("svga-group-beard-single");
                    a.svgaScaleDown(3);
                    break;
                case "glasses":
                    (a = b.get("svga-group-glasses-single")), a.svgaScaleDown(3);
            }
            l = ++l;
        });
        a("#svga-controls-tightly").on("click", function () {
            switch (p) {
                case "eyebrows":
                    var a = b.get("svga-group-eyebrows-left-move");
                    a.svgaRight();
                    a = b.get("svga-group-eyebrows-right-move");
                    a.svgaLeft();
                    break;
                case "eyesfront":
                    (a = b.get("svga-group-eyes-left-move")), a.svgaRight(), (a = b.get("svga-group-eyes-right-move")), a.svgaLeft();
            }
            l = ++l;
        });
        a("#svga-controls-wider").on("click", function () {
            switch (p) {
                case "eyebrows":
                    var a = b.get("svga-group-eyebrows-left-move");
                    a.svgaLeft();
                    a = b.get("svga-group-eyebrows-right-move");
                    a.svgaRight();
                    break;
                case "eyesfront":
                    (a = b.get("svga-group-eyes-left-move")), a.svgaLeft(), (a = b.get("svga-group-eyes-right-move")), a.svgaRight();
            }
            l = ++l;
        });
        a("#svga-controls-eb1").on("click", function () {
            var a = b.get("svga-group-eyebrows-left-rotate");
            a.svgaCancelRotate().svgaRotateRight(1, C / 2);
            a = b.get("svga-group-eyebrows-right-rotate");
            a.svgaCancelRotate().svgaRotateRight(1, C / 4);
            l = ++l;
        });
        a("#svga-controls-eb2").on("click", function () {
            var a = b.get("svga-group-eyebrows-left-rotate");
            a.svgaCancelRotate().svgaRotateLeft(1, C / 4);
            a = b.get("svga-group-eyebrows-right-rotate");
            a.svgaCancelRotate().svgaRotateLeft(1, C / 2);
            l = ++l;
        });
        a("#svga-controls-eb3").on("click", function () {
            var a = b.get("svga-group-eyebrows-left-rotate");
            a.svgaCancelRotate().svgaRotateRight(1, C / 2);
            a = b.get("svga-group-eyebrows-right-rotate");
            a.svgaCancelRotate().svgaRotateLeft(1, C / 2);
            l = ++l;
        });
        a("#svga-controls-eb4").on("click", function () {
            var a = b.get("svga-group-eyebrows-left-rotate");
            a.svgaCancelRotate().svgaRotateLeft(1, C / 1.4);
            a = b.get("svga-group-eyebrows-right-rotate");
            a.svgaCancelRotate().svgaRotateRight(1, C / 1.4);
            l = ++l;
        });
        a("#svga-controls-ebcancel").on("click", function () {
            var a = b.get("svga-group-eyebrows-left-rotate");
            a.svgaCancelRotate();
            a = b.get("svga-group-eyebrows-right-rotate");
            a.svgaCancelRotate();
        });
        a("#svga-resetavatar").on("click", function () {
            2 >= l && !R ? Y() : ((U = "reset"), a("#svga-blocks-face").trigger("click"), a("#svga-bodyzones-faceshape").trigger("click"), a("#svga-work-overlay").fadeIn("fast"), a("#svga-dialog").fadeIn("fast"));
        });
        a("#svga-randomavatar").on("click", function () {
            2 >= l ? N() : ((U = "random"), a("#svga-work-overlay").fadeIn("fast"), a("#svga-dialog").fadeIn("fast"));
        });
        a("#svga-dialog-ok").on("click", function () {
            "reset" === U ? (Y(), a("#svga-work-overlay").fadeOut("fast"), a("#svga-dialog").fadeOut("fast")) : "random" === U && (N(), a("#svga-work-overlay").fadeOut("fast"), a("#svga-dialog").fadeOut("fast"));
        });
        a("#svga-dialog-cancel").on("click", function () {
            a("#svga-work-overlay").fadeOut("fast");
            a("#svga-dialog").fadeOut("fast");
        });
        a(".svga-close").on("click", function () {
            a("#svga-loader").hide();
            a("#svga-work-overlay").fadeOut("fast");
            a("#svga-message").fadeOut("fast");
            a("#svga-ios").fadeOut("fast");
            a("#svga-share-block").fadeOut("fast");
        });
        a("#svga-tryagain").on("click", function () {
            a("#svga-loader").hide();
            a("#svga-message").hide();
            a("#svga-ios").hide();
            a("#svga-share-block").hide();
            a("#svga-gravatar-message").fadeOut("fast");
            a("#svga-gravataravatar").trigger("click");
        });
        a("#svga-saveavatar").on("click", function () {
            a("#svga-work-overlay").fadeIn("fast");
            a("#svga-canvas").attr({ width: c.savingSize, height: c.savingSize });
            q && q.hide();
            r && r.hide();
            var b = a("#svga-svgmain").html();
            b =
                '<svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="' +
                c.savingSize +
                'px" height="' +
                c.savingSize +
                'px" viewBox="0 0 200 200" style="overflow:hidden!important;">' +
                b
                    .replace(/<svg(.*?)>/, "")
                    .replace(/data-(.*?)"(.*?)"/g, "")
                    .replace(/   /g, " ")
                    .replace(/  /g, " ")
                    .replace(/  /g, " ");
            if (c.userPro && !0 === c.userPro) {
                var e = document.getElementById("svga-canvas");
                G(e, b, { ignoreMouse: !0, ignoreDimensions: !0 });
                e = e.toDataURL("image/png");
                var h = "svgA" + (Math.random() + "").replace("0.", "") + ".png";
                a("#svga-canvas").attr({ width: 200, height: 200 });
                a.ajax({ url: c.pathToFolder + "php/save-userpro-avatar.php", type: "post", dataType: "text", data: { imgdata: e, filename: h }, cache: !1 })
                    .done(function (b) {
                        "saved" === b
                            ? (a("#svga-message-text").html(f.alertUserProSuccess).removeClass("svga-error"), a("#svga-work-overlay").fadeIn("fast"))
                            : "error_wordpress" === b
                            ? (a("#svga-work-overlay").fadeIn("fast"), a("#svga-message-text").html(f.alertWordpressFail).addClass("svga-error"))
                            : "login_fail" === b
                            ? (a("#svga-work-overlay").fadeIn("fast"), a("#svga-message-text").html(f.alertUserProPngFail).addClass("svga-error"))
                            : "png_fail" === b
                            ? (a("#svga-work-overlay").fadeIn("fast"), a("#svga-message-text").html(f.alertUserProLoginFail).addClass("svga-error"))
                            : (a("#svga-work-overlay").fadeIn("fast"), a("#svga-message-text").html(f.alertUserProRequireFail).addClass("svga-error"));
                        a("#svga-message").fadeIn("fast");
                    })
                    .fail(function () {
                        a("#svga-message-text").html(f.alertError).addClass("svga-error");
                        a("#svga-work-overlay").fadeIn("fast");
                        a("#svga-message").fadeIn("fast");
                    });
            } else
                "png" === c.saveFileFormat
                    ? ((e = document.getElementById("svga-canvas")), G(e, b, { ignoreMouse: !0, ignoreDimensions: !0 }), (e = e.toDataURL("image/png")), (h = "svgA" + (Math.random() + "").replace("0.", "") + ".png"))
                    : "svg" === c.saveFileFormat && ((e = b), (h = "svgA" + (Math.random() + "").replace("0.", "") + ".svg")),
                    a("#svga-canvas").attr({ width: 200, height: 200 }),
                    a
                        .ajax({ url: c.pathToFolder + "php/save-ready-avatar.php", type: "post", dataType: "text", data: { imgdata: e, filename: h }, cache: !1 })
                        .done(function (b) {
                            "saved" === b
                                ? (a("#svga-message-text").html(f.alertSuccess).removeClass("svga-error"), a("#svga-work-overlay").fadeIn("fast"))
                                : "error_wordpress" === b
                                ? (a("#svga-work-overlay").fadeIn("fast"), a("#svga-message-text").html(f.alertWordpressFail).addClass("svga-error"))
                                : "error_uploads_dir" === b
                                ? (a("#svga-work-overlay").fadeIn("fast"), a("#svga-message-text").html(f.alertErrorUploadsDir).addClass("svga-error"))
                                : "error_file_data" === b
                                ? (a("#svga-work-overlay").fadeIn("fast"), a("#svga-message-text").html(f.alertErrorFileData).addClass("svga-error"))
                                : "error_file_type" === b
                                ? (a("#svga-work-overlay").fadeIn("fast"), a("#svga-message-text").html(f.alertErrorFileType).addClass("svga-error"))
                                : (a("#svga-work-overlay").fadeIn("fast"), a("#svga-message-text").html(f.alertError).addClass("svga-error"));
                            a("#svga-message").fadeIn("fast");
                        })
                        .fail(function () {
                            a("#svga-work-overlay").fadeIn("fast");
                            a("#svga-message-text").html(f.alertError).addClass("svga-error");
                            a("#svga-message").fadeIn("fast");
                        });
        });
        a("#svga-gravataravatar").on("click", function () {
            a("#svga-work-overlay").fadeIn("fast");
            a("#svga-gravatar").fadeIn("fast");
        });
        a("#svga-gravatar-cancel").on("click", function () {
            a("#svga-gravatar").hide();
            a("#svga-work-overlay").fadeOut("fast");
        });
        a("#svga-gravatar-ok").on("click", function () {
            a("#svga-gravatar").hide();
            a("#svga-loader").show();
            a("#svga-canvas").attr({ width: c.gravatarSize, height: c.gravatarSize });
            q && q.hide();
            r && r.hide();
            var b = a("#svga-svgmain").html();
            b =
                '<svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="' +
                c.gravatarSize +
                'px" height="' +
                c.gravatarSize +
                'px" viewBox="0 0 200 200" style="overflow:hidden!important;">' +
                b
                    .replace(/<svg(.*?)>/, "")
                    .replace(/data-(.*?)"(.*?)"/g, "")
                    .replace(/   /g, " ")
                    .replace(/  /g, " ")
                    .replace(/  /g, " ");
            var e = document.getElementById("svga-canvas");
            G(e, b, { ignoreMouse: !0, ignoreDimensions: !0 });
            b = e.toDataURL("image/png");
            e = a("#svga-gravatar-email").val();
            var h = a("#svga-gravatar-pass").val();
            var d = a("input[name=svga-gr-rating]:checked").val();
            a("#svga-canvas").attr({ width: 200, height: 200 });
            a.ajax({ url: c.pathToFolder + "php/send-to-gravatar.php", type: "post", dataType: "text", data: { imgdata: b, datastring1: e, datastring2: h, rating: d }, cache: !1 })
                .done(function (b) {
                    if ("success" === b) a("#svga-message-text").removeClass("svga-error"), a("#svga-loader").hide(), a("#svga-message-text").html(f.alertSuccessGravatar), a("#svga-message").fadeIn("fast");
                    else
                        switch (b) {
                            case "ratingfail":
                                I(f.alertErrorRatingFail);
                                break;
                            case "emailfail":
                                I(f.alertErrorEmailFail);
                                break;
                            case "passwordfail":
                                I(f.alertErrorPasswordFail);
                                break;
                            case "imagefail":
                                I(f.alertErrorImageFail);
                                break;
                            case "faultcode-8":
                                a("#svga-loader").hide();
                                a("#svga-message-text").html(f.alertErrorFaultCode8).addClass("svga-error");
                                a("#svga-work-overlay").fadeIn("fast");
                                a("#svga-message").fadeIn("fast");
                                break;
                            case "faultcode-9":
                                I(f.alertErrorFaultCode9);
                                break;
                            default:
                                I(f.alertCommonErrorGravatar);
                        }
                })
                .fail(function () {
                    I(f.alertCommonErrorGravatar);
                });
        });
        a("#svga-png-one").on("click", function () {
            a("#svga-work-overlay").fadeIn("fast");
            a("#svga-canvas").attr({ width: c.pngFirstDownloadSize, height: c.pngFirstDownloadSize });
            q && q.hide();
            r && r.hide();
            var b = a("#svga-svgmain").html();
            b =
                '<svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="' +
                c.pngFirstDownloadSize +
                'px" height="' +
                c.pngFirstDownloadSize +
                'px" viewBox="0 0 200 200" style="overflow:hidden!important;">' +
                b
                    .replace(/<svg(.*?)>/, "")
                    .replace(/data-(.*?)"(.*?)"/g, "")
                    .replace(/   /g, " ")
                    .replace(/  /g, " ")
                    .replace(/  /g, " ");
            var e = document.getElementById("svga-canvas");
            G(e, b, { ignoreMouse: !0, ignoreDimensions: !0 });
            b = e.toDataURL("image/png");
            var h = "svgA" + (Math.random() + "").replace("0.", "") + ".png";
            a("#svga-canvas").attr({ width: 200, height: 200 });
            a.ajax({ url: c.pathToFolder + "php/save-temp-avatar.php", type: "post", dataType: "text", data: { imgdata: b, filename: h }, cache: !1 })
                .done(function (b) {
                    "saved" === b
                        ? (a("#svga-message-text").removeClass("svga-error"), S(h, "png"), a("#svga-work-overlay").fadeOut("fast"))
                        : (a("#svga-message-text").html(f.alertErrorDownload).addClass("svga-error"), a("#svga-work-overlay").fadeIn("fast"), a("#svga-message").fadeIn("fast"));
                })
                .fail(function () {
                    a("#svga-message-text").html(f.alertErrorDownload).addClass("svga-error");
                    a("#svga-work-overlay").fadeIn("fast");
                    a("#svga-message").fadeIn("fast");
                });
        });
		
		
		
	   a("#saveAvatar").on("click", function () {
            a("#svga-work-overlay").fadeIn("fast");
            a("#svga-canvas").attr({ width: c.pngFirstDownloadSize, height: c.pngFirstDownloadSize });
            q && q.hide();
            r && r.hide();
            var b = a("#svga-svgmain").html();
            b =
                '<svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="' +
                c.pngFirstDownloadSize +
                'px" height="' +
                c.pngFirstDownloadSize +
                'px" viewBox="0 0 200 200" style="overflow:hidden!important;">' +
                b
                    .replace(/<svg(.*?)>/, "")
                    .replace(/data-(.*?)"(.*?)"/g, "")
                    .replace(/   /g, " ")
                    .replace(/  /g, " ")
                    .replace(/  /g, " ");
            var e = document.getElementById("svga-canvas");
            G(e, b, { ignoreMouse: !0, ignoreDimensions: !0 });
            b = e.toDataURL("image/png");
            let user = a("#user_id").val();
            var h = "svgA" + (Math.random() + "").replace("0.", "") + ".png";
            a("#svga-canvas").attr({ width: 200, height: 200 });
            a.ajax({ url: c.pathToFolder + "php/save-temp-avatar.php", type: "post", dataType: "text", data: { imgdata: b, filename: h,user:user }, cache: !1 })
                .done(function (b) {
                    a("#svga-work-overlay").css("display","none");
                    a("#avatar_small_dyanmic").attr('src','http://13.235.169.150/XFactor/assets/svgavatar/for_upload/svgavatars/temp-avatars/'+b);
                    a("#avatar_small_dyanmic_dn").attr('href','http://13.235.169.150/XFactor/assets/svgavatar/for_upload/svgavatars/temp-avatars/'+b);
            //alert(b);
                 //   "saved" === b
                  //      ? (a("#svga-message-text").removeClass("svga-error"), a("#svga-work-overlay").fadeOut("fast"))
                   //    : (a("#svga-message-text").html(f.alertErrorDownload).addClass("svga-error"), a("#svga-work-overlay").fadeIn("fast"), a("#svga-message").fadeIn("fast"));
                })
                .fail(function () {
                    a("#svga-message-text").html(f.alertErrorDownload).addClass("svga-error");
                    a("#svga-work-overlay").fadeIn("fast");
                    a("#svga-message").fadeIn("fast");
                });
        });
		
		
		
        a("#svga-png-two").on("click", function () {
            a("#svga-work-overlay").fadeIn("fast");
            a("#svga-canvas").attr({ width: c.pngSecondDownloadSize, height: c.pngSecondDownloadSize });
            q && q.hide();
            r && r.hide();
            var b = a("#svga-svgmain").html();
            b =
                '<svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="' +
                c.pngSecondDownloadSize +
                'px" height="' +
                c.pngSecondDownloadSize +
                'px" viewBox="0 0 200 200" style="overflow:hidden!important;">' +
                b
                    .replace(/<svg(.*?)>/, "")
                    .replace(/data-(.*?)"(.*?)"/g, "")
                    .replace(/   /g, " ")
                    .replace(/  /g, " ")
                    .replace(/  /g, " ");
            var e = document.getElementById("svga-canvas");
            G(e, b, { ignoreMouse: !0, ignoreDimensions: !0 });
            b = e.toDataURL("image/png");
            var h = "svgA" + (Math.random() + "").replace("0.", "") + ".png";
            a("#svga-canvas").attr({ width: 200, height: 200 });
            a.ajax({ url: c.pathToFolder + "php/save-temp-avatar.php", type: "post", dataType: "text", data: { imgdata: b, filename: h }, cache: !1 })
                .done(function (b) {
                    "saved" === b
                        ? (a("#svga-message-text").removeClass("svga-error"), S(h, "png"), a("#svga-work-overlay").fadeOut("fast"))
                        : (a("#svga-message-text").html(f.alertErrorDownload).addClass("svga-error"), a("#svga-work-overlay").fadeIn("fast"), a("#svga-message").fadeIn("fast"));
                })
                .fail(function () {
                    a("#svga-message-text").html(f.alertErrorDownload).addClass("svga-error");
                    a("#svga-work-overlay").fadeIn("fast");
                    a("#svga-message").fadeIn("fast");
                });
        });
        if (ba)
            a("#svga-downloadavatar").on("click", function () {
                a("#svga-work-overlay").fadeIn("fast");
                a("#svga-canvas").attr({ width: c.pngiOSDownloadSize, height: c.pngiOSDownloadSize });
                q && q.hide();
                r && r.hide();
                var b = a("#svga-svgmain").html();
                b =
                    '<svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="' +
                    c.pngiOSDownloadSize +
                    'px" height="' +
                    c.pngiOSDownloadSize +
                    'px" viewBox="0 0 200 200" style="overflow:hidden!important;">' +
                    b
                        .replace(/<svg(.*?)>/, "")
                        .replace(/data-(.*?)"(.*?)"/g, "")
                        .replace(/   /g, " ")
                        .replace(/  /g, " ")
                        .replace(/  /g, " ");
                var e = document.getElementById("svga-canvas");
                G(e, b, { ignoreMouse: !0, ignoreDimensions: !0 });
                b = e.toDataURL("image/png");
                var h = "svgA" + (Math.random() + "").replace("0.", "") + ".png";
                a("#svga-canvas").attr({ width: 200, height: 200 });
                a.ajax({ url: c.pathToFolder + "php/save-temp-avatar.php", type: "post", dataType: "text", data: { imgdata: b, filename: h }, cache: !1 })
                    .done(function (b) {
                        if ("saved" === b) {
                            a("#svga-message-text").removeClass("svga-error");
                            var e = a("<img />")
                                .on("error", function () {
                                    a(this).hide();
                                    a("#svga-message-text").html(f.alertErrorImage).addClass("svga-error");
                                    a("#svga-work-overlay").fadeIn("fast");
                                    a("#svga-message").fadeIn("fast");
                                })
                                .attr("src", c.pathToFolder + "temp-avatars/" + h)
                                .on("load", function () {
                                    this.complete && "undefined" !== typeof this.naturalWidth && 0 !== this.naturalWidth
                                        ? (a("#svga-ios-image").empty().append(e), a("#svga-work-overlay").fadeIn("fast"), a("#svga-ios").fadeIn("fast"))
                                        : (a("#svga-message-text").html(f.alertErrorImage).addClass("svga-error"), a("#svga-work-overlay").fadeIn("fast"), a("#svga-message").fadeIn("fast"));
                                });
                        } else a("#svga-message-text").html(f.alertErrorDownload).addClass("svga-error"), a("#svga-work-overlay").fadeIn("fast"), a("#svga-message").fadeIn("fast");
                    })
                    .fail(function () {
                        a("#svga-message-text").html(f.alertErrorDownload).addClass("svga-error");
                        a("#svga-work-overlay").fadeIn("fast");
                        a("#svga-message").fadeIn("fast");
                    });
            });
        if (ca)
            a("#svga-downloadavatar").on("click", function () {
                a("#svga-work-overlay").fadeIn("fast");
                a("#svga-canvas").attr({ width: c.pngWin8TabletDownloadSize, height: c.pngWin8TabletDownloadSize });
                q && q.hide();
                r && r.hide();
                var b = a("#svga-svgmain").html();
                b =
                    '<svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="' +
                    c.pngWin8TabletDownloadSize +
                    'px" height="' +
                    c.pngWin8TabletDownloadSize +
                    'px" viewBox="0 0 200 200" style="overflow:hidden!important;">' +
                    b
                        .replace(/<svg(.*?)>/, "")
                        .replace(/data-(.*?)"(.*?)"/g, "")
                        .replace(/   /g, " ")
                        .replace(/  /g, " ")
                        .replace(/  /g, " ");
                var e = document.getElementById("svga-canvas");
                G(e, b, { ignoreMouse: !0, ignoreDimensions: !0 });
                b = e.toDataURL("image/png");
                var h = "svgA" + (Math.random() + "").replace("0.", "") + ".png";
                a("#svga-canvas").attr({ width: 200, height: 200 });
                a.ajax({ url: c.pathToFolder + "php/save-temp-avatar.php", type: "post", dataType: "text", data: { imgdata: b, filename: h }, cache: !1 })
                    .done(function (b) {
                        "saved" === b
                            ? (a("#svga-message-text").removeClass("svga-error"), S(h, "png"), a("#svga-work-overlay").fadeOut("fast"))
                            : (a("#svga-message-text").html(f.alertErrorDownload).addClass("svga-error"), a("#svga-work-overlay").fadeIn("fast"), a("#svga-message").fadeIn("fast"));
                    })
                    .fail(function () {
                        a("#svga-message-text").html(f.alertErrorDownload).addClass("svga-error");
                        a("#svga-work-overlay").fadeIn("fast");
                        a("#svga-message").fadeIn("fast");
                    });
            });
        a("#svga-svgfile").on("click", function () {
            a("#svga-work-overlay").fadeIn("fast");
            q && q.hide();
            r && r.hide();
            var b = a("#svga-svgmain").html();
            b =
                '<svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="' +
                c.svgDownloadSize +
                'px" height="' +
                c.svgDownloadSize +
                'px" viewBox="0 0 200 200" style="overflow:hidden!important;">' +
                b
                    .replace(/<svg(.*?)>/, "")
                    .replace(/data-(.*?)"(.*?)"/g, "")
                    .replace(/   /g, " ")
                    .replace(/  /g, " ")
                    .replace(/  /g, " ");
            var e = "svgA" + (Math.random() + "").replace("0.", "") + ".svg";
            a.ajax({ url: c.pathToFolder + "php/save-temp-avatar.php", type: "post", dataType: "text", data: { imgdata: b, filename: e }, cache: !1 })
                .done(function (b) {
                    "saved" === b
                        ? (a("#svga-message-text").removeClass("svga-error"), S(e, "svg"), a("#svga-work-overlay").fadeOut("fast"))
                        : (a("#svga-message-text").html(f.alertErrorDownload).addClass("svga-error"), a("#svga-work-overlay").fadeIn("fast"), a("#svga-message").fadeIn("fast"));
                })
                .fail(function () {
                    a("#svga-message-text").html(f.alertErrorDownload).addClass("svga-error");
                    a("#svga-work-overlay").fadeIn("fast");
                    a("#svga-message").fadeIn("fast");
                });
        });
        a("#svga-shareavatar").on("click", function () {
            a("#svga-work-overlay").fadeIn("fast");
            a("#svga-canvas").attr({ width: c.shareImageSize, height: c.shareImageSize });
            q && q.show();
            r && r.show();
            var b = a("#svga-svgmain").html();
            b =
                '<svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="' +
                c.shareImageSize +
                'px" height="' +
                c.shareImageSize +
                'px" viewBox="0 0 200 200" style="overflow:hidden!important;">' +
                b
                    .replace(/<svg(.*?)>/, "")
                    .replace(/data-(.*?)"(.*?)"/g, "")
                    .replace(/   /g, " ")
                    .replace(/  /g, " ")
                    .replace(/  /g, " ");
            var e = document.getElementById("svga-canvas");
            G(e, b, { ignoreMouse: !0, ignoreDimensions: !0 });
            b = e.toDataURL("image/png");
            let user = a("#user_id").val();
            var h = "svgA" + (Math.random() + "").replace("0.", "") + ".png";
            a("#svga-canvas").attr({ width: 200, height: 200 });
            q && q.hide();
            r && r.hide();
            a.ajax({ url: c.pathToFolder + "php/save-temp-avatar.php", type: "post", dataType: "text", data: { imgdata: b, filename: h,user:user }, cache: !1 })
                .done(function (b) {
                    if ("saved" === b) {
                        a("#svga-message-text").removeClass("svga-error");
                        var e = a("<img />")
                            .on("error", function () {
                                a(this).hide();
                                a("#svga-message-text").html(f.alertErrorImage).addClass("svga-error");
                                a("#svga-work-overlay").fadeIn("fast");
                                a("#svga-message").fadeIn("fast");
                            })
                            .attr("src", c.pathToFolder + "temp-avatars/" + h)
                            .on("load", function () {
                                this.complete && "undefined" !== typeof this.naturalWidth && 0 !== this.naturalWidth
                                    ? (a("#svga-share-image").empty().append(e), a("#svga-work-overlay").fadeIn("fast"), a("#svga-share-block").fadeIn("fast"))
                                    : (a("#svga-message-text").html(f.alertErrorImage).addClass("svga-error"), a("#svga-work-overlay").fadeIn("fast"), a("#svga-message").fadeIn("fast"));
                            });
                    } else a("#svga-message-text").html(f.alertErrorDownload).addClass("svga-error"), a("#svga-work-overlay").fadeIn("fast"), a("#svga-message").fadeIn("fast");
                })
                .fail(function () {
                    a("#svga-message-text").html(f.alertErrorDownload).addClass("svga-error");
                    a("#svga-work-overlay").fadeIn("fast");
                    a("#svga-message").fadeIn("fast");
                });
        });
        a("#svga-share-twitter").on("click", function () {
            window.open(
                "https://twitter.com/intent/tweet?original_referer=" + encodeURIComponent(c.shareLink) + "&text=" + encodeURIComponent(c.shareTitle) + "%20" + encodeURIComponent(c.shareLink),
                "Twitter",
                "menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600"
            );
            return !1;
        });
        a("#svga-share-pinterest").on("click", function () {
            var b = a("#svga-share-image img")[0].src;
            window.open(
                "//pinterest.com/pin/create/button/?url=" + encodeURIComponent(c.shareLink) + "&media=" + encodeURIComponent(b) + "&description=" + encodeURIComponent(c.shareTitle),
                "Pinterest",
                "menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600"
            );
            return !1;
        });
        a(".svga-col-left .sp-dd").remove();
        a("#svga-blocks-face").trigger("click");
        a("#svga-bodyzones-faceshape").trigger("click");
        a("#svga-elements-faceshape-" + M.faceshape)
            .trigger("click")
            .addClass("svga-active-element");
        a("#svga-colors-faceshape > div:nth-child(1)").trigger("click");
        a("#svga-loader").hide();
        l = 2;
        R = !1;
        setTimeout(function () {
            da();
        }, 100);
        a("#svga-start-overlay").hide();
    }
    function da() {
        var b = a(".svga-col-left"),
            e = a(".svga-col-right");
        b.height("auto");
        e.height("auto");
        if (481 <= window.innerWidth) {
            var c = b.height(),
                f = e.height();
            c >= f ? e.height(c) : b.height(f);
        }
    }
    var c = window.svgAvatarsOptions(),
        b = window.SVG,
        Q = window.tinycolor,
        G = window.canvg;
    c.version = "1.4";
    var f = window.svgAvatarsTranslation();
    c.pathToFolder.match(/(\/)$/) || "" === c.pathToFolder.trim() || (c.pathToFolder += "/");
    b.extend(b.Element, {
        svgaCenterScale: function (a, b) {
            var e = this.bbox(),
                c = e.cx;
            e = e.cy;
            b || (b = a);
            return this.transform({ a: a, b: 0, c: 0, d: b, e: c - a * c, f: e - b * e });
        },
        svgaLeft: function (a, b) {
            a = a ? a : 3;
            b = b ? b : N;
            var e = this.data("leftright"),
                c = this.data("updown");
            e > -(a * b) && (this.move(e - b, c), this.data("leftright", e - b));
            return this;
        },
        svgaRight: function (a, b) {
            a = a ? a : 3;
            b = b ? b : N;
            var e = this.data("leftright"),
                c = this.data("updown");
            e < a * b && (this.move(e + b, c), this.data("leftright", e + b));
            return this;
        },
        svgaUp: function (a, b) {
            a = a ? a : 3;
            b = b ? b : V;
            var e = this.data("leftright"),
                c = this.data("updown");
            c > -(a * b) && (this.move(e, c - b), this.data("updown", c - b));
            return this;
        },
        svgaDown: function (a, b) {
            a = a ? a : 3;
            b = b ? b : V;
            var e = this.data("leftright"),
                c = this.data("updown");
            c < a * b && (this.move(e, c + b), this.data("updown", c + b));
            return this;
        },
        svgaScaleUp: function (a, b, c) {
            a = a ? a : 3;
            b = b ? b : W;
            c = c ? c : b;
            var e = this.data("scaleX") + 1e-7,
                f = this.data("scaleY") + 1e-7;
            e < 1 + a * b && (this.svgaCenterScale(e + b, f + c), this.data("scaleX", e + b + 1e-7), this.data("scaleY", f + c + 1e-7));
            return this;
        },
        svgaScaleDown: function (a, b, c) {
            a = a ? a : 3;
            b = b ? b : W;
            c = c ? c : b;
            var e = this.data("scaleX") - 1e-7,
                f = this.data("scaleY") - 1e-7;
            e > 1 - a * b && (this.svgaCenterScale(e - b, f - c), this.data("scaleX", e - b - 1e-7), this.data("scaleY", f - c - 1e-7));
            return this;
        },
        svgaRotateLeft: function (a, b, c, f) {
            a = a ? a : 2;
            b = b ? b : C;
            var e = this.data("rotate");
            e > -(a * b) && (this.rotate(e - b - 1e-7, c, f), this.data("rotate", e - b));
            return this;
        },
        svgaRotateRight: function (a, b, c, f) {
            a = a ? a : 2;
            b = b ? b : C;
            var e = this.data("rotate");
            e < a * b && (this.rotate(e + b + 1e-7, c, f), this.data("rotate", e + b));
            return this;
        },
        svgaCancelRotate: function () {
            return this.rotate(1e-7).data("rotate", 1e-7, !0);
        },
    });
    var ba = navigator.userAgent.match(/(iPad|iPhone|iPod)/g) ? !0 : !1,
        ea = navigator.userAgent.match(/(Android)/g) ? !0 : !1,
        fa = navigator.userAgent.match(/(Opera)/g) ? !0 : !1,
        ca = -1 !== navigator.platform.toLowerCase().indexOf("win") && -1 !== navigator.userAgent.toLowerCase().indexOf("touch") ? !0 : !1,
        V = 1,
        N = 1,
        W = 0.05,
        C = 15,
        O = [
            '<div id="svga-container" class="svga-no-touch"><div id="svga-canvas-wrap"><canvas id="svga-canvas"></canvas></div><div class="svga-row"><div class="svga-col-left"><div class="svga-vert-order-glob-controls"><div class="svga-row row-glob-controls"><div id="svga-glob-controls" class="scrollbar scroll-simple_outer"></div></div></div><div class="svga-vert-order-colors"><div class="svga-row row-colors"><div id="svga-custom-color"><input type="text"></div><div id="svga-colors-wrap"><div id="svga-colors" class="scrollbar scroll-simple_outer"></div></div></div></div><div class="svga-vert-order-svgcanvas"><div class="svga-row row-svgcanvas"><div id="svga-svgmain"></div></div></div></div><div class="svga-col-right"><div class="svga-vert-order-controls"><div class="svga-row row-controls"><div id="svga-controls" class="scrollbar scroll-simple_outer"></div></div></div><div class="svga-vert-order-main"><div class="svga-android-hack"><div class="svga-vert-order-elements"><div class="svga-row row-elements"><div id="svga-elements" class="scrollbar scroll-simple_outer"></div></div></div><div class="svga-vert-order-bodyzones"><div class="svga-row row-bodyzones"><div id="svga-bodyzones"></div></div></div><div class="svga-vert-order-blocks"><div class="svga-row"><div id="svga-blocks" class="scrollbar scroll-simple_outer"></div></div></div></div></div><div class="svga-row"><div id="svga-footermenu"><ul><li id="svga-randomavatar"><div></div><span class="svga-mobilehidden">',
            f.randomMsg,
            '</span></li><li id="svga-resetavatar"><div></div><span class="svga-mobilehidden">',
            f.resetMsg,
            '</span></li><li id="svga-saveavatar"><div></div><span class="svga-mobilehidden">',
            f.saveMsg,
            '</span></li><li id="svga-shareavatar"><div></div><span class="svga-mobilehidden">',
            f.shareMsg,
            '</span></li><li id="svga-gravataravatar"><div></div><span class="svga-mobilehidden">',
            f.gravatarMsg,
            '</span></li><li id="svga-downloadavatar"><div></div><span class="svga-mobilehidden">',
            f.downloadMsg,
            '</span><ul><li id="svga-svgfile">',
            f.svgFormatMsg,
            '</li><li id="svga-png-two">',
            "png - " + c.pngSecondDownloadSize + "x" + c.pngSecondDownloadSize,
            '</li><li id="svga-png-one">',
            "png - " + c.pngFirstDownloadSize + "x" + c.pngFirstDownloadSize,
            '</li></ul></li></ul></div></div></div></div><p class="svga-credit">',
            f.authoredMsg,
            '<a href="http://svgavatars.com" target="_blank" rel="nofollow">svgAvatars.com</a></p><div id="svga-start-overlay">&nbsp;</div><div id="svga-work-overlay">&nbsp;</div><div id="svga-loader">',
            f.waitMsg,
            '</div><div id="svga-gender">',
            f.welcomeSlogan,
            '<div id="svga-starticons-wrap"><div id="svga-start-boys"></div><div id="svga-start-girls"></div></div>',
            f.welcomeMsg,
            '</div><div id="svga-dialog">',
            f.confirmMsg,
            '<div id="svga-dialog-btns"><div id="svga-dialog-ok">',
            f.okMsg,
            '</div><div id="svga-dialog-cancel">',
            f.cancelMsg,
            '</div></div></div><div id="svga-gravatar">',
            f.gravatarTitle,
            '<div id="svga-gravatar-fields"><input class="svga-input" type="text" id="svga-gravatar-email" value="" placeholder="',
            f.gravatarEmail,
            '"><input class="svga-input" type="password" id="svga-gravatar-pass" value="" placeholder="',
            f.gravatarPwd,
            '"><p>',
            f.gravatarRating,
            '<label class="svga-gr-rating"><input type="radio" name="svga-gr-rating" value="0" checked> G</label><label class="svga-gr-rating"><input type="radio" name="svga-gr-rating" value="1"> PG</label><label class="svga-gr-rating"><input type="radio" name="svga-gr-rating" value="2"> R</label><label class="svga-gr-rating"><input type="radio" name="svga-gr-rating" value="3"> X</label></p></div>',
            f.gravatarNote,
            '<div id="svga-gravatar-btns"><div id="svga-gravatar-ok">',
            f.installMsg,
            '</div><div id="svga-gravatar-cancel">',
            f.cancelMsg,
            '</div></div></div><div id="svga-message"><div id="svga-message-text"></div><div class="svga-close">',
            f.closeMsg,
            '</div></div><div id="svga-gravatar-message"><div id="svga-gravatar-message-text"></div><div id="svga-tryagain">',
            f.tryAgainMsg,
            '</div></div><div id="svga-ios"><div id="svga-ios-text">',
            f.iosMsg,
            '</div><div id="svga-ios-image"></div><div class="svga-close">',
            f.closeMsg,
            '</div></div><div id="svga-share-block"><div id="svga-share-image"></div><ul><li id="svga-share-twitter"><a href="#"><span id="svga-twitter-icon"></span></a></li><li id="svga-share-pinterest"><a href="#"><span id="svga-pinterest-icon"></span></a></li></ul><div class="svga-close">',
            f.closeMsg,
            "</div></div></div>",
        ].join("");
    b.supported || (O = ['<div id="svga-container" class="svga-no-touch"><h3 class="svga-nosvg">', f.alertSvgSupportError, "</h3></div>"].join(""));
    a("#svgAvatars").empty().html(O);
    switch (c.colorScheme) {
        case "light":
            a("#svga-container").addClass("svga-light");
            break;
        case "dark":
            a("#svga-container").addClass("svga-dark");
            break;
        case "custom":
            a("#svga-container").addClass("svga-custom");
            break;
        default:
            a("#svga-container").addClass("svga-light");
    }
    b.supported &&
        (a("#svga-canvas").attr({ width: 200, height: 200 }),
        c.hideSaveButton && a("#svga-saveavatar").remove(),
        c.hideShareButton && a("#svga-shareavatar").remove(),
        c.hideSvgDownloadButton && c.hidePngFirstDownloadButton && c.hidePngSecondDownloadButton
            ? a("#svga-downloadavatar").remove()
            : (c.hidePngFirstDownloadButton && a("#svga-png-one").remove(), c.hidePngSecondDownloadButton && a("#svga-png-two").remove(), c.hideSvgDownloadButton && a("#svga-svgfile").remove()),
        c.hideGravatar && a("#svga-gravataravatar").remove(),
        c.twitter || a("#svga-share-twitter").remove(),
        c.pinterest || a("#svga-share-pinterest").remove(),
        c.twitter || c.pinterest || a("#svga-shareavatar").remove(),
        ba && (a("#svga-container").removeClass("svga-no-touch"), a("#svga-downloadavatar > ul").remove()),
        ea && c.hideSvgDownloadOnAndroid && a("#svga-svgfile").remove(),
        fa && a("#svga-container").addClass("svga-opera"),
        ca && (a("#svga-container").addClass("svga-win8tablet"), a("#svga-downloadavatar > ul").remove()),
        a("#svga-start-boys").append(
            '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="80px" height="80px" viewBox="0 0 80 80"><path class="svga-icon-boy" d="M73.22,72.6c-1.05-6.99-8.49-9.28-14.35-10.97c-3.07-0.89-6.98-1.58-9.48-3.72C47.3,56.13,47.5,50.9,49,49.8c3.27-2.39,5.26-7.51,6.14-11.25c0.25-1.07-0.36-0.46,0.81-0.64c0.71-0.11,2.13-2.3,2.64-3.21c1.02-1.83,2.41-4.85,2.42-8.02c0.01-2.23-1.09-2.51-2.41-2.29c-0.43,0.07-0.93,0.21-0.93,0.21c1.42-1.84,1.71-8.22-0.67-13.4C53.56,3.71,44.38,2,40,2c-2.35,0-7.61,1.63-7.81,3.31c-3.37,0.19-7.7,2.55-9.2,5.89c-2.41,5.38-1.48,11.4-0.68,13.4c0,0-0.5-0.14-0.93-0.21c-1.32-0.21-2.42,0.07-2.41,2.29c0.01,3.16,1.41,6.19,2.43,8.02c0.51,0.91,1.93,3.1,2.64,3.21c1.17,0.18,0.56-0.42,0.81,0.64c0.89,3.74,3.09,9.03,6.14,11.25c1.69,2.04,1.7,6.33-0.39,8.11c-2.84,2.43-7.37,3.07-10.84,4.12c-5.86,1.77-13.29,4.9-13.27,12.25C6.51,76.73,7.7,78,10.13,78h59.74c2.43,0,3.68-1.27,3.63-3.72C73.5,74.28,73.4,73.81,73.22,72.6C72.63,68.73,73.4,73.81,73.22,72.6z"/></svg>'
        ),
        a("#svga-start-girls").append(
            '<svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="80px" height="80px" viewBox="0 0 80 80"><path class="svga-icon-girl" d="M71,74.56c-0.08-5.44-4.21-7.67-8.81-9.63c-3.65-1.55-12.07-2.23-13.83-6.23c-0.83-1.89-0.22-3.15,0.11-5.85c6.95,0.23,17.72-5.29,19.02-10.4c0.65-2.55-2.79-4.44-4.22-6.01c-1.86-2.04-3.3-4.5-4.29-7.07c-2.17-5.61-0.2-11.18-2.14-16.7C54.18,5.14,46.53,2.01,40,2.01l0,0c0,0,0,0,0,0s0,0,0,0l0,0c-6.53,0-14.18,3.13-16.83,10.66c-1.94,5.51,0.03,11.09-2.14,16.7c-0.99,2.57-2.44,5.03-4.29,7.07c-1.43,1.58-4.87,3.46-4.22,6.01c1.3,5.1,12.07,10.62,19.02,10.4c0.34,2.7,0.94,3.95,0.11,5.85c-1.75,3.99-10.18,4.67-13.83,6.23c-4.6,1.96-8.74,4.2-8.81,9.63c-0.04,2.79-0.04,3.43,3.49,3.43H67.5C71.04,77.99,71.04,77.35,71,74.56z"/></svg>'
        ),
        a("#svga-start-boys").on("click", function () {
            a("#svga-gender").hide();
            a.ajax({ url: c.pathToFolder + "json/svgavatars-male-data.json?ver=" + c.version, dataType: "json", cache: !0, global: !1 })
                .done(function (a) {
                    L("boys", a);
                })
                .fail(function () {
                    a("#svga-message-text").html(f.alertJsonError).addClass("svga-error");
                    a("#svga-loader").hide();
                    a(".svga-close").hide();
                    a("#svga-work-overlay").fadeIn("fast");
                    a("#svga-message").fadeIn("fast");
                });
        }),
        a("#svga-start-girls").on("click", function () {
            a("#svga-gender").hide();
            a.ajax({ url: c.pathToFolder + "json/svgavatars-female-data.json?ver=" + c.version, dataType: "json", cache: !0, global: !1 })
                .done(function (a) {
                    L("girls", a);
                })
                .fail(function () {
                    a("#svga-message-text").html(f.alertJsonError).addClass("svga-error");
                    a("#svga-loader").hide();
                    a(".svga-close").hide();
                    a("#svga-work-overlay").fadeIn("fast");
                    a("#svga-message").fadeIn("fast");
                });
        }),
        "boysonly" === c.showGender ? a("#svga-start-boys").trigger("click") : "girlsonly" === c.showGender && a("#svga-start-girls").trigger("click"),
        a(window).on("resize orientationchange", function () {
            da();
        }),
        a(".scrollbar").scrollbar({ showArrows: !1, ignoreMobile: !1 }));
});
